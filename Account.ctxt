#BlueJ class context
comment0.params=
comment0.target=Account()
comment0.text=\r\n\ Defauls\ constructor.\r\n
comment1.params=email
comment1.target=Account(java.lang.String)
comment1.text=\r\n\ Basic\ constructor,\ requires\ at\ least\ an\ email\ so\ that\ a\ row\ on\ the\ database\ can\ be\ created\ for\ the\ rest\r\n\ of\ this\ user's\ info\ can\ be\ loaded\ in\ the\ correct\ spot.\r\n
comment10.params=
comment10.target=java.lang.String\ getProfilePic()
comment10.text=\r\n\ Getter\ method\ for\ the\ user's\ profile\ picture.\r\n\ \r\n\ @return\ \ myPicture\ \ \ This\ filepth\ to\ this\ user's\ current\ profile\ picture.\r\n
comment11.params=newPic
comment11.target=void\ setProfilePic(java.lang.String)
comment11.text=\r\n\ Setter\ method\ for\ this\ user's\ profile\ picture.\r\n\ \r\n\ @param\ \ \ newPic\ \ The\ fielpath\ to\ the\ new\ profile\ picture\ to\ be\ set.\r\n
comment12.params=status
comment12.target=void\ setOnlineStatus(boolean)
comment12.text=\r\n\ Sets\ the\ online\ status\ of\ this\ user.\r\n\ \r\n\ @param\ \ \ status\ \ True\ if\ user\ is\ online,\ false\ if\ not.\r\n
comment13.params=
comment13.target=boolean\ getOnlineStatus()
comment13.text=\r\n\ Returns\ if\ this\ account\ is\ online\ or\ not.\r\n\ \r\n\ @return\ \ isOnline\ \ \ \ True\ if\ user\ is\ online,\ falshe\ if\ not.\r\n
comment14.params=
comment14.target=java.util.LinkedList\ getRequests()
comment14.text=\r\n\ Returns\ a\ LinkedList\ of\ accounts\ that\ are\ requesting\ to\ be\ friends\ with\ this\ user.\r\n\ \r\n\ @return\ \ myRequests\ \ The\ accounts\ that\ want\ to\ be\ friends\ with\ this\ user.\r\n
comment15.params=newRequest
comment15.target=void\ addRequest(Account)
comment15.text=\r\n\ Adds\ a\ new\ account\ to\ the\ list\ of\ accounts\ requesting\ friendship\ with\ this\ user.\r\n\ \r\n\ @param\ \ \ newRequest\ \ The\ account\ to\ be\ added\ to\ the\ list\ of\ requests.\r\n
comment16.params=
comment16.target=java.util.ArrayList\ getFriendList()
comment16.text=\r\n\ Accessor\ method\ for\ the\ user's\ list\ of\ friends.\r\n\r\n\ @return\ \ friendList\ \ A\ list\ of\ this\ user's\ confirmed\ friends.\r\n
comment17.params=newFriend
comment17.target=void\ addFriend(Account)
comment17.text=\r\n\ Adds\ a\ new\ friend\ to\ the\ list\ of\ this\ user's\ confirmed\ friends.\r\n\ \r\n\ @param\ \ \ newFriend\ \ \ The\ new\ friend\ to\ be\ added.\r\n
comment18.params=email\ pass
comment18.target=boolean\ checkAccount(java.lang.String,\ java.lang.String)
comment18.text=\r\n\ Checks\ if\ an\ account\ exists\ in\ the\ database.\r\n\ \r\n\ @param\ \ \ pass\ \ \ \ The\ password\ to\ be\ checked.\r\n\ \ \ \ \ \ \ \ \ \ email\ \ \ The\ username\ to\ be\ checked.\r\n\ @return\ \ isAct\ \ \ True\ if\ the\ account\ exists,\ false\ if\ not.\ \ \ \ \ \ \ \ \ \ \r\n
comment19.params=localNum
comment19.target=Account\ getDBInfo(int)
comment19.text=\r\n\ Reads\ info\ from\ database\ and\ assembles\ it\ into\ a\ complete\ account\ object.\r\n\ \r\n\ @return\ \ newAct\ \ The\ account\ being\ assembled\ form\ the\ database\ info.\r\n
comment2.params=name\ email\ pass\ pic
comment2.target=Account(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment2.text=\r\n\ Account\ constructor\r\n\ \r\n\ @param\ \ \ name\ \ \ \ The\ user's\ name.\r\n\ \ \ \ \ \ \ \ \ \ email\ \ \ The\ user's\ email.\r\n\ \ \ \ \ \ \ \ \ \ pass\ \ \ \ The\ user's\ password.\r\n\ \ \ \ \ \ \ \ \ \ pic\ \ \ \ \ The\ filepath\ to\ the\ user's\ profile\ picture.\r\n
comment20.params=
comment20.target=void\ saveAll()
comment20.text=\r\n\ Saves\ all\ the\ data\ in\ this\ Account\ to\ the\ database.\ Does\ not\ require\ the\ account\ ot\ already\ exist\ in\ the\ database.\r\n\ If\ the\ account\ is\ not\ already\ in\ the\ database,\ a\ new\ entry\ is\ created\ with\ this\ accout's\ info.\r\n
comment21.params=
comment21.target=void\ saveName()
comment21.text=\r\n\ Saves\ Name\ in\ this\ Account\ to\ the\ database.\r\n\ Requires\ the\ account\ to\ already\ exist\ in\ the\ database.\r\n
comment22.params=
comment22.target=void\ savePassword()
comment22.text=\r\n\ Saves\ the\ Password\ in\ this\ Account\ to\ the\ database.\r\n\ Requires\ the\ account\ to\ already\ exist\ in\ the\ database.\r\n
comment23.params=
comment23.target=void\ savePicture()
comment23.text=\r\n\ Saves\ the\ location\ of\ the\ profile\ picture\ in\ this\ Account\ to\ the\ database.\r\n\ Requires\ the\ account\ to\ already\ exist\ in\ the\ database.\r\n
comment24.params=
comment24.target=void\ deleteAccount()
comment24.text=\r\n\ Deletes\ this\ account's\ info\ from\ the\ database.\r\n
comment3.params=
comment3.target=int\ getActNum()
comment3.text=\r\n\ Gives\ this\ account's\ account\ number.\r\n\ \r\n\ @return\ \ myActNum\ \ \ \ This\ account's\ email\ converted\ to\ a\ hash\ code\ with\ String.hashCode().\r\n
comment4.params=
comment4.target=java.lang.String\ getName()
comment4.text=\r\n\ Accessor\ method\ for\ the\ user's\ name.\r\n\ \r\n\ @return\ \ myName\ \ This\ user's\ current\ name.\r\n
comment5.params=newName
comment5.target=void\ setName(java.lang.String)
comment5.text=\r\n\ Setter\ method\ for\ the\ user's\ name.\r\n\r\n\ @param\ \ \ newName\ This\ user's\ new\ name.\r\n
comment6.params=
comment6.target=java.lang.String\ getPassword()
comment6.text=\r\n\ Accessor\ method\ for\ the\ user's\ password.\r\n\ \r\n\ @return\ \ myPassword\ \ This\ user's\ current\ password.\r\n
comment7.params=newPass
comment7.target=void\ setPassword(java.lang.String)
comment7.text=\r\n\ Setter\ method\ for\ the\ user's\ password.\r\n\r\n\ @param\ \ \ newPass\ This\ user's\ new\ password.\r\n
comment8.params=
comment8.target=java.lang.String\ getEmail()
comment8.text=\r\n\ Accessor\ method\ for\ the\ user's\ email\ in\ string\ format.\r\n\r\n\ @return\ \ myEmail\ This\ user's\ current\ email.\r\n
comment9.params=email
comment9.target=void\ setEmail(java.lang.String)
comment9.text=\r\n\ Setter\ method\ for\ this\ user's\ email.\r\n\ \r\n\ @param\ \ \ email\ \ \ Thius\ user's\ email.\r\n
numComments=25
